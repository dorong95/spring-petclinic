# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: h-self-hosted
  # vmImage: ubuntu-latest # Azure-hosted agent 사용 시
  
variables:
  JAVA_HOME: '/usr/lib/jvm/java-17-openjdk-amd64'

stages:
- stage: Vault
  displayName: Vault
  jobs:
  - job: Vault
    displayName: test vault values
    #pool:
    #  vmImage: ubuntu-latest
    steps:
    - task: AzureKeyVault@2
      inputs:
        azureSubscription: 'keyvault service'  # Azure Subscription 연결 이름
        KeyVaultName: 'key-ssh-h-lab'  # Azure Key Vault 이름
        SecretsFilter: '*'  # 가져올 비밀을 선택합니다. 특정 비밀만 가져오려면 이름을 입력할 수 있습니다.
    - script: |
        echo "Secret Value: $(my-secret)"
        displayName: 'Display secret'
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Source Build
    #pool:
    #  vmImage: ubuntu-latest
    steps:
    - checkout: self  # 코드 가져오기
    - task: Gradle@3
      displayName: Build an Source
      inputs:
        gradleWrapperFile: 'gradlew'  # Path to your Gradle wrapper
        tasks: 'clean build'  # Replace with the tasks you want to run
        jdkArchitectureOption: 'x64'
    #- task: Docker@2
    #  displayName: Build an image
    #  inputs:
    #    command: build
    #    dockerfile: '**/Dockerfile'
    #    buildContext: $(Build.SourcesDirectory)
    #    tags: |
    #      $(tag)


